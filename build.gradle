buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

ext.build = System.getenv().BUILD_NUMBER ?: 'git'
ext.modversion = "${project.version_major}.${project.version_minor}.${project.version_micro}.${build}"

version = "${project.version_minecraft}-${modversion}"
group = 'com.github.lunatrius'

compileJava.options.encoding = 'UTF-8'

idea {
    module {
        downloadSources = true
    }
}

minecraft {
    version = "${project.version_minecraft}-${project.version_forge}"

    if (project.hasProperty('version_mappings'))
        mappings = project.version_mappings
	mappings = "snapshot_20160915"

    if (!project.hasProperty('run_location'))
        runDir = 'run'
    else
        runDir = run_location.replace('{modid}', project.name).replace('{mcversion}', project.version_minecraft)

    replaceIn 'reference/Reference.java'
    replace '${version}', modversion
    replace '${mcversion}', project.version_minecraft
    replace '${forgeversion}', project.version_forge
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
		
		 expand([
                'modid'          : project.name,
                'version'        : modversion,
                'mcversion'      : project.version_minecraft,
                'forgeversion'   : project.version_forge,
                'minforgeversion': project.hasProperty('version_minforge') ? project.version_minforge : project.version_forge,
                'coreversion'    : project.version_lunatriuscore
        ])
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

repositories {
    ivy {
        name = 'lunatrius\' ivy repo'
        url 'http://mc.lunatri.us/files'
    }
}

dependencies {
    //compile group: group, name: 'LunatriusCore', version: "${project.version_minecraft}-${project.version_lunatriuscore}", classifier: 'dev'
}
